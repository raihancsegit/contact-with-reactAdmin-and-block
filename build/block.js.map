{"version":3,"file":"block.js","mappings":"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","sources":["webpack://contactSignup-store/external window [\"wp\",\"blockEditor\"]","webpack://contactSignup-store/external window [\"wp\",\"blocks\"]","webpack://contactSignup-store/external window [\"wp\",\"components\"]","webpack://contactSignup-store/external window [\"wp\",\"element\"]","webpack://contactSignup-store/webpack/bootstrap","webpack://contactSignup-store/webpack/runtime/compat get default export","webpack://contactSignup-store/webpack/runtime/define property getters","webpack://contactSignup-store/webpack/runtime/hasOwnProperty shorthand","webpack://contactSignup-store/webpack/runtime/make namespace object","webpack://contactSignup-store/./src/block.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from \"@wordpress/blocks\";\nimport { InspectorControls } from \"@wordpress/block-editor\";\nimport { SelectControl, PanelBody } from \"@wordpress/components\";\nimport { useState, useEffect } from \"@wordpress/element\";\n\nregisterBlockType(\"contact-signup/block\", {\n  title: \"Contact Signup Block\",\n  icon: \"id\",\n  category: \"widgets\",\n  attributes: {\n    selectedContact: {\n      type: \"string\", // Change from number to string\n      default: \"\",\n    },\n  },\n  edit: (props) => {\n    const { attributes, setAttributes } = props;\n    const [contacts, setContacts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [selectedContactData, setSelectedContactData] = useState(null);\n\n    useEffect(() => {\n      const url = `${appLocalizer.apiUrl}/contact-signup/v1/contacts`;\n      fetch(url)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"Fetched Contacts:\", data); // Debugging\n          setContacts(data);\n          setLoading(false);\n\n          // Fetch data for the initially selected contact\n          const initialContact = data.find(\n            (contact) => contact.id === attributes.selectedContact\n          );\n          setSelectedContactData(initialContact || null);\n          console.log(\"Initial Contact Data:\", initialContact); // Debugging\n        })\n        .catch((error) => {\n          console.error(\"Error fetching contacts:\", error);\n          setLoading(false);\n        });\n    }, []);\n\n    useEffect(() => {\n      if (contacts.length > 0) {\n        const contact = contacts.find(\n          (contact) => contact.id === attributes.selectedContact\n        );\n        setSelectedContactData(contact || null);\n        console.log(\"Selected Contact Data Updated:\", contact); // Debugging\n      }\n    }, [attributes.selectedContact, contacts]);\n\n    const handleSelectChange = (selectedContact) => {\n      setAttributes({ selectedContact });\n\n      // Fetch the selected contact data\n      const contact = contacts.find(\n        (contact) => contact.id === selectedContact\n      );\n      setSelectedContactData(contact || null);\n      console.log(\"Select Change - Contact ID:\", selectedContact); // Debugging\n      console.log(\"Select Change - Contact Data:\", contact); // Debugging\n    };\n\n    const contactOptions = contacts.map((contact) => ({\n      label: contact.name,\n      value: contact.id,\n    }));\n\n    return (\n      <>\n        <InspectorControls>\n          <PanelBody title=\"Contact Settings\">\n            {loading ? (\n              <p>Loading contacts...</p>\n            ) : contacts.length === 0 ? (\n              <p>No contacts found.</p>\n            ) : (\n              <SelectControl\n                label=\"Select a Contact\"\n                value={attributes.selectedContact}\n                options={[\n                  { label: \"Select a contact\", value: \"\" },\n                  ...contactOptions,\n                ]}\n                onChange={handleSelectChange}\n              />\n            )}\n          </PanelBody>\n        </InspectorControls>\n        <div className=\"contact-card-wrapper\">\n          {selectedContactData ? (\n            <div className=\"contact-card\">\n              <h2>{selectedContactData.name}</h2>\n              <p>Address: {selectedContactData.address}</p>\n              <p>Phone: {selectedContactData.phone}</p>\n              <p>Email: {selectedContactData.email}</p>\n              <p>Hobbies: {selectedContactData.hobbies}</p>\n            </div>\n          ) : (\n            <p>Select a contact to see details.</p>\n          )}\n        </div>\n      </>\n    );\n  },\n  save: () => {\n    return null;\n  },\n});\n"],"names":["registerBlockType","InspectorControls","SelectControl","PanelBody","useState","useEffect","title","icon","category","attributes","selectedContact","type","default","edit","props","setAttributes","contacts","setContacts","loading","setLoading","selectedContactData","setSelectedContactData","url","appLocalizer","apiUrl","fetch","then","response","json","data","console","log","initialContact","find","contact","id","catch","error","length","handleSelectChange","contactOptions","map","label","name","value","createElement","Fragment","options","onChange","className","address","phone","email","hobbies","save"],"sourceRoot":""}